/*
 * grunt-angular-protractor
 * https://github.com/software-engineering/grunt-angular-protractor
 *
 * Copyright (c) 2015 it-schaedler
 * Licensed under the MIT license.
 */

'use strict';

var path = require('path');

module.exports = function (grunt) {

    // Project configuration.
    grunt.initConfig({
        jshint: {
            all: [
                'Gruntfile.js',
                'tasks/*.js',
                'test'
            ],
            options: {
                jshintrc: '.jshintrc'
            }
        },

        // Before generating any new files, remove any previously-created files.
        clean: {
            build: {
                src: ['build']
            }
        },
        mochaTest: {
            test: {
                options: {
                    reporter: 'spec',
                    quiet: false,
                    clearRequireCache: true
                },
                src: [
                    path.join('tests', '**', '*_spec.js')
                ]
            }
        },

        // Configuration to be run (and then tested).
        angular_protractor: {
            task1: {
                configFile: path.join(__dirname, 'tests', 'task1', 'conf.js'),
                options: {
                    specs: [
                        path.join(__dirname, 'tests', 'task1', '*_e2e.js')
                    ]
                },
                dest: path.join(__dirname, 'build', 'task1-config.js')
            }
        }
    });

    // Actually load this plugin's task(s).
    grunt.loadTasks('tasks');

    // These plugins provide necessary tasks.
    grunt.loadNpmTasks('grunt-contrib-jshint');
    grunt.loadNpmTasks('grunt-contrib-clean');
    grunt.loadNpmTasks('grunt-mocha-test');

    // Whenever the "test" task is run, first clean the "tmp" dir, then run this
    // plugin's task(s), then test the result.
    grunt.registerTask('test', ['clean', 'jshint', 'mochaTest']);

    // By default, lint and run all tests.
    grunt.registerTask('default', ['test', 'angular_protractor']);

};
