/*
 * grunt-angular-protractor
 * https://github.com/software-engineering/grunt-angular-protractor
 *
 * Copyright (c) 2015 it-schaedler
 * Licensed under the MIT license.
 */

'use strict';

var path = require('path');

module.exports = function (_this) {
    _this.grunt.verbose.writeln('Run: Protractor.');

    var nodeBin = _this.nodeBin,
        args = _this.addArguments(),
        done = _this.async(),
        runProtractorCallback = function (error, result, code) {
            if (error) {
                if (code === 1 && _this.keepAlive) {
                    _this.grunt.log.oklns("Test failed but keep the grunt process alive.");
                } else {
                    _this.grunt.warn('Tests failed, protractor exited with code: ', code);
                }
            }
            done();
        },
        runProtractor = function () {

            _this.grunt.verbose.writeln('runProtractor()');

            var child = _this.grunt.util.spawn({
                cmd: nodeBin,
                args: args,
                opts: {
                    stdio: 'pipe'
                }
            }, runProtractorCallback);

            process.stdin.pipe(child.stdin);
            child.stdout.pipe(process.stdout);
            child.stderr.pipe(process.stderr);

        },
        runWebdriverManagerUpdate = function () {

            _this.grunt.util.spawn({
                cmd: nodeBin,
                args: process.execArgv.concat([path.join(_this.protractorBinaries, 'webdriver-manager'), 'update']),
                opts: {
                    stdio: 'pipe'
                }
            }, runProtractor);
        };

    if (_this.webdriverManagerUpdate) {
        runWebdriverManagerUpdate();
    } else {
        runProtractor();
    }
};
