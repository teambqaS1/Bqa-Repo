'use strict';

var grunt = require('grunt'),
    should = require('should'),
    path = require('path'),
    _ = require('lodash');

var generateConfigFile = require(path.join('..', '..', 'lib', 'prototype', 'generateConfigFile'));

describe('AngularProtractorTask prototype generate config file', function () {

    var makeMock = function () {
            var testObject = {
                grunt : {
                    verbose: {
                        writeln: function () {

                        }
                    },
                    warn: function (dest) {
                        testObject.mock = 'File "' + dest + '" could not generated. Check if you set the option.dest in your config.';
                    },
                    file: {
                        write : function (dest, config) {
                            testObject.mock = [dest, config];
                        }
                    }
                },
                mock : [],
                protractorOptions: {},
                protractorBinaries: {},
                dest: 'dest'
            };
            return testObject;
        },
        makeMock2 = function () {
             var testObject2 = {
                grunt : {
                    verbose: {
                        writeln: function () {

                        }
                    },
                    warn: function (dest) {
                        testObject2.mock = dest;
                    },
                    file: {
                        write : function (dest, config) {
                            testObject2.mock = [dest, config];
                        }
                    }
                },
                mock : [],
                protractorOptions: {},
                protractorBinaries: {}
            };
            return testObject2;
        };

    it('should return file input.', function () {
        var _this = makeMock();
        generateConfigFile(_this);
        _this.mock.should.deepEqual(['dest', 'exports.config = {}']);
    });

    it('should return war message for user.', function () {
        var _this = makeMock2();
        generateConfigFile(_this);
        _this.mock.should.equal('File "undefined" could not generated. Check if you set the option.dest in your config.');
    });

});
