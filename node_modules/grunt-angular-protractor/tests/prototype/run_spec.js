'use strict';

var grunt = require('grunt'),
    should = require('should'),
    path = require('path'),
    _ = require('lodash'),
    sinon = require('sinon'),
    Stream = require('stream');

var runProtractor = require(path.join('..', '..', 'lib', 'prototype', 'run'));

describe('AngularProtractorTask prototype run protractor', function () {

    var makeMockWebdriver = function () {
            var testObject = {
                grunt: {
                    verbose: {
                        writeln: function () {

                        }
                    },
                    warn: function () {
                    },
                    util: {
                        spawn: sinon.spy()
                    }
                },
                nodeBin: 'nodeBin',
                keepAlive: false,
                addArguments: function () {
                },
                async: function () {
                },
                webdriverManagerUpdate: true,
                protractorBinaries: 'protractorBinaries'
            };
            return testObject;
        },
        makeMockProtractor = function () {
            var testObject = {
                grunt: {
                    verbose: {
                        writeln: function () {

                        }
                    },
                    warn: function () {
                    },
                    util: {
                        spawn: function () {
                            var obj = {
                                stdin: new Stream(),
                                stdout: new Stream(),
                                stderr: new Stream()
                            };

                            return obj;
                        }
                    }
                },
                nodeBin: 'nodeBin',
                keepAlive: false,
                addArguments: function () {
                    return ['arg1', 'arg2'];
                },
                async: function () {
                },
                webdriverManagerUpdate: false,
                protractorBinaries: 'protractorBinaries'
            };
            return testObject;
        };

    it('should run webdriver executable with update.', function () {
        var _this = makeMockWebdriver();
        runProtractor(_this);

        _this.grunt.util.spawn.callCount.should.equal(1);
        _this.grunt.util.spawn.args[0][0].should.deepEqual(
            {
                args: ['protractorBinaries/webdriver-manager', 'update'],
                cmd: 'nodeBin',
                opts: {stdio: 'pipe'}
            }
        );
    });


    it('should run protractor executable with arguments.', function () {
        var _this = makeMockProtractor(),
            spy = sinon.spy(_this.grunt.util, 'spawn');

        runProtractor(_this);

        spy.args[0][0].should.deepEqual(
            {
                args: ['arg1', 'arg2'],
                cmd: 'nodeBin',
                opts: {stdio: 'pipe'}
            }
        );


    });


});
